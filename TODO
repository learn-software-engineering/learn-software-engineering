1. **Design Patterns**: Learn about common solutions to recurring design problems in OOP.
   - Recommended reading: "Design Patterns: Elements of Reusable Object-Oriented Software" by Gamma et al.

2. **SOLID Principles**: Understand these five principles of object-oriented programming and design.
   - Recommended reading: "Clean Architecture: A Craftsman's Guide to Software Structure and Design" by Robert C. Martin

3. **Aspect-Oriented Programming (AOP)**: Explore this programming paradigm that aims to increase modularity by allowing the separation of cross-cutting concerns.

4. **Metaprogramming**: Learn about writing code that manipulates code, including Python's metaclasses.

5. **Object-Relational Mapping (ORM)**: Understand how OOP concepts are applied to database interactions.

6. **Functional Programming**: Compare and contrast OOP with functional programming paradigms.

7. **Concurrent Object-Oriented Programming**: Explore how OOP concepts apply in concurrent and parallel programming scenarios.

8. Remove the file `layouts/partials/scripts/mermaid.html` when new version of Docsy is released
